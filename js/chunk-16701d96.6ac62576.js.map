{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.test.js","webpack:///./node_modules/vee-validate/dist/rules.js","webpack:///./src/@core/utils/validations/validators.js","webpack:///./src/@core/utils/validations/validations.js"],"names":["$","isObject","DELEGATES_TO_EXEC","execCalled","re","exec","apply","this","arguments","test","nativeTest","target","proto","forced","str","call","result","Error","alpha","en","cs","da","de","es","fa","fr","it","lt","nl","hu","pl","pt","ro","ru","sk","sr","sv","tr","uk","ar","az","el","alphanumeric","alphaDash","validate","value","_a","_b","locale","Array","isArray","every","val","Object","keys","some","loc","params","name","alpha$1","validate$1","params$1","alpha_dash","validate$2","params$2","alpha_num","validate$4","min","max","Number","params$4","between","validate$5","String","params$5","isTarget","confirmed","validate$8","multiple","split","map","emailStr","trim","params$8","default","email","isNullOrUndefined","undefined","isEmptyArray","arr","length","isCallable","fn","toArray","arrayLike","from","_copyArray","array","i","push","validate$d","integer","validate$g","params$b","cast","validate$k","params$e","validate$n","regex","params$g","RegExp","validate$o","allowFalse","valid","required","computesRequired","params$h","validatorPositive","validatorDigits","Digit","regExp","validDigit","validatorPassword","password","validPassword","validatorCreditCard","creditnum","cRegExp","validCreditCard","validatorUrlValidator","validatorMobile","extend","rule_required","rule_email","mobile","rule_min","rule_confirmed","rule_regex","rule_between","rule_alpha","rule_integer","message","rule_alpha_dash","rule_alpha_num","rule_length","localize"],"mappings":"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","file":"js/chunk-16701d96.6ac62576.js","sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\n\nvar DELEGATES_TO_EXEC = function () {\n  var execCalled = false;\n  var re = /[ac]/;\n  re.exec = function () {\n    execCalled = true;\n    return /./.exec.apply(this, arguments);\n  };\n  return re.test('abc') === true && execCalled;\n}();\n\nvar nativeTest = /./.test;\n\n$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {\n  test: function (str) {\n    if (typeof this.exec !== 'function') {\n      return nativeTest.call(this, str);\n    }\n    var result = this.exec(str);\n    if (result !== null && !isObject(result)) {\n      throw new Error('RegExp exec method returned something other than an Object or null');\n    }\n    return !!result;\n  }\n});\n","/**\n  * vee-validate v3.4.5\n  * (c) 2020 Abdelrahman Awad\n  * @license MIT\n  */\n/**\r\n * Some Alpha Regex helpers.\r\n * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js\r\n */\r\n/* eslint-disable no-misleading-character-class */\r\nvar alpha = {\r\n    en: /^[A-Z]*$/i,\r\n    cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\r\n    da: /^[A-ZÆØÅ]*$/i,\r\n    de: /^[A-ZÄÖÜß]*$/i,\r\n    es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\r\n    it: /^[A-Z\\xC0-\\xFF]*$/i,\r\n    lt: /^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,\r\n    nl: /^[A-ZÉËÏÓÖÜ]*$/i,\r\n    hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\r\n    pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\r\n    pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\r\n    ro: /^[A-ZĂÂÎŞŢ]*$/i,\r\n    ru: /^[А-ЯЁ]*$/i,\r\n    sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,\r\n    sr: /^[A-ZČĆŽŠĐ]*$/i,\r\n    sv: /^[A-ZÅÄÖ]*$/i,\r\n    tr: /^[A-ZÇĞİıÖŞÜ]*$/i,\r\n    uk: /^[А-ЩЬЮЯЄІЇҐ]*$/i,\r\n    ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,\r\n    az: /^[A-ZÇƏĞİıÖŞÜ]*$/i,\r\n    el: /^[Α-ώ]*$/i\r\n};\r\nvar alphaSpaces = {\r\n    en: /^[A-Z\\s]*$/i,\r\n    cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\\s]*$/i,\r\n    da: /^[A-ZÆØÅ\\s]*$/i,\r\n    de: /^[A-ZÄÖÜß\\s]*$/i,\r\n    es: /^[A-ZÁÉÍÑÓÚÜ\\s]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\\s]*$/i,\r\n    it: /^[A-Z\\xC0-\\xFF\\s]*$/i,\r\n    lt: /^[A-ZĄČĘĖĮŠŲŪŽ\\s]*$/i,\r\n    nl: /^[A-ZÉËÏÓÖÜ\\s]*$/i,\r\n    hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\\s]*$/i,\r\n    pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\\s]*$/i,\r\n    pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\\s]*$/i,\r\n    ro: /^[A-ZĂÂÎŞŢ\\s]*$/i,\r\n    ru: /^[А-ЯЁ\\s]*$/i,\r\n    sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ\\s]*$/i,\r\n    sr: /^[A-ZČĆŽŠĐ\\s]*$/i,\r\n    sv: /^[A-ZÅÄÖ\\s]*$/i,\r\n    tr: /^[A-ZÇĞİıÖŞÜ\\s]*$/i,\r\n    uk: /^[А-ЩЬЮЯЄІЇҐ\\s]*$/i,\r\n    ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\\s]*$/,\r\n    az: /^[A-ZÇƏĞİıÖŞÜ\\s]*$/i,\r\n    el: /^[Α-ώ\\s]*$/i\r\n};\r\nvar alphanumeric = {\r\n    en: /^[0-9A-Z]*$/i,\r\n    cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\r\n    da: /^[0-9A-ZÆØÅ]$/i,\r\n    de: /^[0-9A-ZÄÖÜß]*$/i,\r\n    es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\r\n    it: /^[0-9A-Z\\xC0-\\xFF]*$/i,\r\n    lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ]*$/i,\r\n    hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\r\n    nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,\r\n    pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\r\n    pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\r\n    ro: /^[0-9A-ZĂÂÎŞŢ]*$/i,\r\n    ru: /^[0-9А-ЯЁ]*$/i,\r\n    sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,\r\n    sr: /^[0-9A-ZČĆŽŠĐ]*$/i,\r\n    sv: /^[0-9A-ZÅÄÖ]*$/i,\r\n    tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,\r\n    uk: /^[0-9А-ЩЬЮЯЄІЇҐ]*$/i,\r\n    ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,\r\n    az: /^[0-9A-ZÇƏĞİıÖŞÜ]*$/i,\r\n    el: /^[0-9Α-ώ]*$/i\r\n};\r\nvar alphaDash = {\r\n    en: /^[0-9A-Z_-]*$/i,\r\n    cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,\r\n    da: /^[0-9A-ZÆØÅ_-]*$/i,\r\n    de: /^[0-9A-ZÄÖÜß_-]*$/i,\r\n    es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,\r\n    it: /^[0-9A-Z\\xC0-\\xFF_-]*$/i,\r\n    lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ_-]*$/i,\r\n    nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,\r\n    hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,\r\n    pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,\r\n    pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,\r\n    ro: /^[0-9A-ZĂÂÎŞŢ_-]*$/i,\r\n    ru: /^[0-9А-ЯЁ_-]*$/i,\r\n    sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ_-]*$/i,\r\n    sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,\r\n    sv: /^[0-9A-ZÅÄÖ_-]*$/i,\r\n    tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,\r\n    uk: /^[0-9А-ЩЬЮЯЄІЇҐ_-]*$/i,\r\n    ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/,\r\n    az: /^[0-9A-ZÇƏĞİıÖŞÜ_-]*$/i,\r\n    el: /^[0-9Α-ώ_-]*$/i\r\n};\n\nvar validate = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alpha).some(function (loc) { return alpha[loc].test(value); });\r\n    }\r\n    return (alpha[locale] || alpha.en).test(value);\r\n};\r\nvar params = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha$1 = {\r\n    validate: validate,\r\n    params: params\r\n};\n\nvar validate$1 = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$1(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alphaDash).some(function (loc) { return alphaDash[loc].test(value); });\r\n    }\r\n    return (alphaDash[locale] || alphaDash.en).test(value);\r\n};\r\nvar params$1 = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha_dash = {\r\n    validate: validate$1,\r\n    params: params$1\r\n};\n\nvar validate$2 = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$2(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alphanumeric).some(function (loc) { return alphanumeric[loc].test(value); });\r\n    }\r\n    return (alphanumeric[locale] || alphanumeric.en).test(value);\r\n};\r\nvar params$2 = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha_num = {\r\n    validate: validate$2,\r\n    params: params$2\r\n};\n\nvar validate$3 = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$3(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alphaSpaces).some(function (loc) { return alphaSpaces[loc].test(value); });\r\n    }\r\n    return (alphaSpaces[locale] || alphaSpaces.en).test(value);\r\n};\r\nvar params$3 = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha_spaces = {\r\n    validate: validate$3,\r\n    params: params$3\r\n};\n\nvar validate$4 = function (value, _a) {\r\n    var _b = _a === void 0 ? {} : _a, min = _b.min, max = _b.max;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return !!validate$4(val, { min: min, max: max }); });\r\n    }\r\n    return Number(min) <= value && Number(max) >= value;\r\n};\r\nvar params$4 = [\r\n    {\r\n        name: 'min'\r\n    },\r\n    {\r\n        name: 'max'\r\n    }\r\n];\r\nvar between = {\r\n    validate: validate$4,\r\n    params: params$4\r\n};\n\nvar validate$5 = function (value, _a) {\r\n    var target = _a.target;\r\n    return String(value) === String(target);\r\n};\r\nvar params$5 = [\r\n    {\r\n        name: 'target',\r\n        isTarget: true\r\n    }\r\n];\r\nvar confirmed = {\r\n    validate: validate$5,\r\n    params: params$5\r\n};\n\nvar validate$6 = function (value, _a) {\r\n    var length = _a.length;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$6(val, { length: length }); });\r\n    }\r\n    var strVal = String(value);\r\n    return /^[0-9]*$/.test(strVal) && strVal.length === length;\r\n};\r\nvar params$6 = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar digits = {\r\n    validate: validate$6,\r\n    params: params$6\r\n};\n\nvar validateImage = function (file, width, height) {\r\n    var URL = window.URL || window.webkitURL;\r\n    return new Promise(function (resolve) {\r\n        var image = new Image();\r\n        image.onerror = function () { return resolve(false); };\r\n        image.onload = function () { return resolve(image.width === width && image.height === height); };\r\n        image.src = URL.createObjectURL(file);\r\n    });\r\n};\r\nvar validate$7 = function (files, _a) {\r\n    var width = _a.width, height = _a.height;\r\n    var list = [];\r\n    files = Array.isArray(files) ? files : [files];\r\n    for (var i = 0; i < files.length; i++) {\r\n        // if file is not an image, reject.\r\n        if (!/\\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(files[i].name)) {\r\n            return Promise.resolve(false);\r\n        }\r\n        list.push(files[i]);\r\n    }\r\n    return Promise.all(list.map(function (file) { return validateImage(file, width, height); })).then(function (values) {\r\n        return values.every(function (v) { return v; });\r\n    });\r\n};\r\nvar params$7 = [\r\n    {\r\n        name: 'width',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    },\r\n    {\r\n        name: 'height',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar dimensions = {\r\n    validate: validate$7,\r\n    params: params$7\r\n};\n\nvar validate$8 = function (value, _a) {\r\n    var multiple = (_a === void 0 ? {} : _a).multiple;\r\n    // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (multiple && !Array.isArray(value)) {\r\n        value = String(value)\r\n            .split(',')\r\n            .map(function (emailStr) { return emailStr.trim(); });\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return re.test(String(val)); });\r\n    }\r\n    return re.test(String(value));\r\n};\r\nvar params$8 = [\r\n    {\r\n        name: 'multiple',\r\n        default: false\r\n    }\r\n];\r\nvar email = {\r\n    validate: validate$8,\r\n    params: params$8\r\n};\n\nfunction isNullOrUndefined(value) {\r\n    return value === null || value === undefined;\r\n}\r\nfunction isEmptyArray(arr) {\r\n    return Array.isArray(arr) && arr.length === 0;\r\n}\r\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\n\nfunction includes(collection, item) {\r\n    return collection.indexOf(item) !== -1;\r\n}\r\n/**\r\n * Converts an array-like object to array, provides a simple polyfill for Array.from\r\n */\r\nfunction toArray(arrayLike) {\r\n    if (isCallable(Array.from)) {\r\n        return Array.from(arrayLike);\r\n    }\r\n    /* istanbul ignore next */\r\n    return _copyArray(arrayLike);\r\n}\r\n/* istanbul ignore next */\r\nfunction _copyArray(arrayLike) {\r\n    var array = [];\r\n    var length = arrayLike.length;\r\n    for (var i = 0; i < length; i++) {\r\n        array.push(arrayLike[i]);\r\n    }\r\n    return array;\r\n}\n\nvar validate$9 = function (value, options) {\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$9(val, options); });\r\n    }\r\n    return toArray(options).some(function (item) {\r\n        // eslint-disable-next-line\r\n        return item == value;\r\n    });\r\n};\r\nvar oneOf = {\r\n    validate: validate$9\r\n};\n\nvar validate$a = function (value, args) {\r\n    return !validate$9(value, args);\r\n};\r\nvar excluded = {\r\n    validate: validate$a\r\n};\n\nvar validate$b = function (files, extensions) {\r\n    var regex = new RegExp(\".(\" + extensions.join('|') + \")$\", 'i');\r\n    if (Array.isArray(files)) {\r\n        return files.every(function (file) { return regex.test(file.name); });\r\n    }\r\n    return regex.test(files.name);\r\n};\r\nvar ext = {\r\n    validate: validate$b\r\n};\n\nvar validate$c = function (files) {\r\n    var regex = /\\.(jpg|svg|jpeg|png|bmp|gif|webp)$/i;\r\n    if (Array.isArray(files)) {\r\n        return files.every(function (file) { return regex.test(file.name); });\r\n    }\r\n    return regex.test(files.name);\r\n};\r\nvar image = {\r\n    validate: validate$c\r\n};\n\nvar validate$d = function (value) {\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return /^-?[0-9]+$/.test(String(val)); });\r\n    }\r\n    return /^-?[0-9]+$/.test(String(value));\r\n};\r\nvar integer = {\r\n    validate: validate$d\r\n};\n\nvar validate$e = function (value, _a) {\r\n    var other = _a.other;\r\n    return value === other;\r\n};\r\nvar params$9 = [\r\n    {\r\n        name: 'other'\r\n    }\r\n];\r\nvar is = {\r\n    validate: validate$e,\r\n    params: params$9\r\n};\n\nvar validate$f = function (value, _a) {\r\n    var other = _a.other;\r\n    return value !== other;\r\n};\r\nvar params$a = [\r\n    {\r\n        name: 'other'\r\n    }\r\n];\r\nvar is_not = {\r\n    validate: validate$f,\r\n    params: params$a\r\n};\n\nvar validate$g = function (value, _a) {\r\n    var length = _a.length;\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n    if (typeof value === 'string') {\r\n        value = toArray(value);\r\n    }\r\n    if (typeof value === 'number') {\r\n        value = String(value);\r\n    }\r\n    if (!value.length) {\r\n        value = toArray(value);\r\n    }\r\n    return value.length === length;\r\n};\r\nvar params$b = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) { return Number(value); }\r\n    }\r\n];\r\nvar length = {\r\n    validate: validate$g,\r\n    params: params$b\r\n};\n\nvar validate$h = function (value, _a) {\r\n    var length = _a.length;\r\n    if (isNullOrUndefined(value)) {\r\n        return length >= 0;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$h(val, { length: length }); });\r\n    }\r\n    return String(value).length <= length;\r\n};\r\nvar params$c = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar max = {\r\n    validate: validate$h,\r\n    params: params$c\r\n};\n\nvar validate$i = function (value, _a) {\r\n    var max = _a.max;\r\n    if (isNullOrUndefined(value) || value === '') {\r\n        return false;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.length > 0 && value.every(function (val) { return validate$i(val, { max: max }); });\r\n    }\r\n    return Number(value) <= max;\r\n};\r\nvar params$d = [\r\n    {\r\n        name: 'max',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar max_value = {\r\n    validate: validate$i,\r\n    params: params$d\r\n};\n\nvar validate$j = function (files, mimes) {\r\n    var regex = new RegExp(mimes.join('|').replace('*', '.+') + \"$\", 'i');\r\n    if (Array.isArray(files)) {\r\n        return files.every(function (file) { return regex.test(file.type); });\r\n    }\r\n    return regex.test(files.type);\r\n};\r\nvar mimes = {\r\n    validate: validate$j\r\n};\n\nvar validate$k = function (value, _a) {\r\n    var length = _a.length;\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$k(val, { length: length }); });\r\n    }\r\n    return String(value).length >= length;\r\n};\r\nvar params$e = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar min = {\r\n    validate: validate$k,\r\n    params: params$e\r\n};\n\nvar validate$l = function (value, _a) {\r\n    var min = _a.min;\r\n    if (isNullOrUndefined(value) || value === '') {\r\n        return false;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.length > 0 && value.every(function (val) { return validate$l(val, { min: min }); });\r\n    }\r\n    return Number(value) >= min;\r\n};\r\nvar params$f = [\r\n    {\r\n        name: 'min',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar min_value = {\r\n    validate: validate$l,\r\n    params: params$f\r\n};\n\nvar ar = /^[٠١٢٣٤٥٦٧٨٩]+$/;\r\nvar en = /^[0-9]+$/;\r\nvar validate$m = function (value) {\r\n    var testValue = function (val) {\r\n        var strValue = String(val);\r\n        return en.test(strValue) || ar.test(strValue);\r\n    };\r\n    if (Array.isArray(value)) {\r\n        return value.every(testValue);\r\n    }\r\n    return testValue(value);\r\n};\r\nvar numeric = {\r\n    validate: validate$m\r\n};\n\nvar validate$n = function (value, _a) {\r\n    var regex = _a.regex;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$n(val, { regex: regex }); });\r\n    }\r\n    return regex.test(String(value));\r\n};\r\nvar params$g = [\r\n    {\r\n        name: 'regex',\r\n        cast: function (value) {\r\n            if (typeof value === 'string') {\r\n                return new RegExp(value);\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n];\r\nvar regex = {\r\n    validate: validate$n,\r\n    params: params$g\r\n};\n\nvar validate$o = function (value, _a) {\r\n    var allowFalse = (_a === void 0 ? { allowFalse: true } : _a).allowFalse;\r\n    var result = {\r\n        valid: false,\r\n        required: true\r\n    };\r\n    if (isNullOrUndefined(value) || isEmptyArray(value)) {\r\n        return result;\r\n    }\r\n    // incase a field considers `false` as an empty value like checkboxes.\r\n    if (value === false && !allowFalse) {\r\n        return result;\r\n    }\r\n    result.valid = !!String(value).trim().length;\r\n    return result;\r\n};\r\nvar computesRequired = true;\r\nvar params$h = [\r\n    {\r\n        name: 'allowFalse',\r\n        default: true\r\n    }\r\n];\r\nvar required = {\r\n    validate: validate$o,\r\n    params: params$h,\r\n    computesRequired: computesRequired\r\n};\n\nvar testEmpty = function (value) {\r\n    return isEmptyArray(value) || includes([false, null, undefined], value) || !String(value).trim().length;\r\n};\r\nvar validate$p = function (value, _a) {\r\n    var target = _a.target, values = _a.values;\r\n    var required;\r\n    if (values && values.length) {\r\n        if (!Array.isArray(values) && typeof values === 'string') {\r\n            values = [values];\r\n        }\r\n        // eslint-disable-next-line\r\n        required = values.some(function (val) { return val == String(target).trim(); });\r\n    }\r\n    else {\r\n        required = !testEmpty(target);\r\n    }\r\n    if (!required) {\r\n        return {\r\n            valid: true,\r\n            required: required\r\n        };\r\n    }\r\n    return {\r\n        valid: !testEmpty(value),\r\n        required: required\r\n    };\r\n};\r\nvar params$i = [\r\n    {\r\n        name: 'target',\r\n        isTarget: true\r\n    },\r\n    {\r\n        name: 'values'\r\n    }\r\n];\r\nvar computesRequired$1 = true;\r\nvar required_if = {\r\n    validate: validate$p,\r\n    params: params$i,\r\n    computesRequired: computesRequired$1\r\n};\n\nvar validate$q = function (files, _a) {\r\n    var size = _a.size;\r\n    if (isNaN(size)) {\r\n        return false;\r\n    }\r\n    var nSize = size * 1024;\r\n    if (!Array.isArray(files)) {\r\n        return files.size <= nSize;\r\n    }\r\n    for (var i = 0; i < files.length; i++) {\r\n        if (files[i].size > nSize) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nvar params$j = [\r\n    {\r\n        name: 'size',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar size = {\r\n    validate: validate$q,\r\n    params: params$j\r\n};\n\nvar validate$r = function (value, params) {\r\n    var _a = params || {}, _b = _a.decimals, decimals = _b === void 0 ? 0 : _b, _c = _a.separator, separator = _c === void 0 ? 'dot' : _c;\r\n    var separators = {\r\n        dot: '.',\r\n        comma: ','\r\n    };\r\n    var regexPart = +decimals === 0 ? '+' : \"{\" + decimals + \"}\";\r\n    var regex = new RegExp(\"^-?\\\\d+\\\\\" + (separators[separator] || '.') + \"\\\\d\" + regexPart + \"$\");\r\n    return Array.isArray(value) ? value.every(function (val) { return regex.test(String(val)); }) : regex.test(String(value));\r\n};\r\nvar params$k = [\r\n    {\r\n        name: 'decimals',\r\n        default: 0\r\n    },\r\n    {\r\n        name: 'separator',\r\n        default: 'dot'\r\n    }\r\n];\r\nvar double = {\r\n    validate: validate$r,\r\n    params: params$k\r\n};\n\nexport { alpha$1 as alpha, alpha_dash, alpha_num, alpha_spaces, between, confirmed, digits, dimensions, double, email, excluded, ext, image, integer, is, is_not, length, max, max_value, mimes, min, min_value, numeric, oneOf, regex, required, required_if, size };\n","export const validatorPositive = value => {\n  if (value >= 0) {\n    return true\n  }\n  return false\n}\n\nexport const validatorDigits = Digit => {\n  /* eslint-disable no-useless-escape */\n  const regExp = /^[0-9]*$/\n  /* eslint-enable no-useless-escape */\n  const validDigit = regExp.test(Digit)\n  return validDigit\n}\n\nexport const validatorPassword = password => {\n  /* eslint-disable no-useless-escape */\n  const regExp = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*()]).{8,}/\n  /* eslint-enable no-useless-escape */\n  const validPassword = regExp.test(password)\n  return validPassword\n}\n\nexport const validatorCreditCard = creditnum => {\n  /* eslint-disable no-useless-escape */\n  const cRegExp = /^(?:3[47][0-9]{13})$/\n  /* eslint-enable no-useless-escape */\n  const validCreditCard = cRegExp.test(creditnum)\n  return validCreditCard\n}\n\nexport const validatorUrlValidator = val => {\n  if (val === undefined || val === null || val.length === 0) {\n    return true\n  }\n  /* eslint-disable no-useless-escape */\n  const re = /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/\n  /* eslint-enable no-useless-escape */\n  return re.test(val)\n}\n\nexport const validatorMobile = val => {\n  if (val === undefined || val === null || val.length === 0) {\n    return true\n  }\n  /* eslint-disable no-useless-escape */\n  const re = /^09[0-9]{9}$/\n  /* eslint-enable no-useless-escape */\n  return re.test(val)\n}\n","import { extend, localize } from 'vee-validate'\nimport {\n  required as rule_required,\n  email as rule_email,\n  mobile as rule_mobile,\n  min as rule_min,\n  confirmed as rule_confirmed,\n  regex as rule_regex,\n  between as rule_between,\n  alpha as rule_alpha,\n  integer as rule_integer,\n  digits as rule_digits,\n  alpha_dash as rule_alpha_dash,\n  alpha_num as rule_alpha_num,\n  length as rule_length,\n} from 'vee-validate/dist/rules'\nimport fa from 'vee-validate/dist/locale/fa.json'\n// import en from 'vee-validate/dist/locale/en.json'\n\n// eslint-disable-next-line object-curly-newline\nimport { validatorPositive, validatorUrlValidator, validatorPassword, validatorCreditCard, validatorMobile, validatorDigits } from './validators'\n\n// ////////////////////////////////////////////////////////\n// General\n// ////////////////////////////////////////////////////////\n\nexport const required = extend('required', rule_required)\n\nexport const email = extend('email', rule_email)\n\nexport const min = extend('min', rule_min)\n\nexport const confirmed = extend('confirmed', rule_confirmed)\n\nexport const regex = extend('regex', rule_regex)\n\nexport const between = extend('between', rule_between)\n\nexport const alpha = extend('alpha', rule_alpha)\n\nexport const integer = extend('integer', rule_integer)\n\nexport const digits = extend('digits', {\n  validate: validatorDigits,\n  message: 'لطفا مقدار را به صورت عدد وارد کنید',\n})\n\nexport const alphaDash = extend('alpha-dash', rule_alpha_dash)\n\nexport const alphaNum = extend('alpha-num', rule_alpha_num)\n\nexport const length = extend('length', rule_length)\n\nexport const positive = extend('positive', {\n  validate: validatorPositive,\n  message: 'Please enter positive number!',\n})\n\nexport const credit = extend('credit-card', {\n  validate: validatorCreditCard,\n  message: 'It is not valid credit card!',\n})\n\nexport const password = extend('password', {\n  validate: validatorPassword,\n  message: 'Your {_field_} must contain at least one uppercase, one lowercase, one special character and one digit',\n})\n\nexport const url = extend('url', {\n  validate: validatorUrlValidator,\n  message: 'URL is invalid',\n})\n\nexport const mobile = extend('mobile', {\n  validate: validatorMobile,\n  message: 'تلفن همراه معتبر نمی‌باشد',\n})\n\n// Install English and Arabic localizations.\nlocalize('fa', fa)\n// // en: {\n// //   messages: en.messages,\n// //   names: {\n// //     email: 'Email',\n// //     password: 'Password',\n// //   },\n// //   fields: {\n// //     password: {\n// //       min: '{_field_} is too short, you want to get hacked?',\n// //     },\n// //   },\n// // },\n// fa: {\n//   messages: fa.messages,\n//   names: {\n//     email: 'ایمیل',\n//     password: 'کلمه عبور',\n//   },\n//   fields: {\n//     password: {\n//       min: 'طول کلمه عبور باید بیشتر از ۶ کارکتر باشد',\n//     },\n//   },\n// },\n\n// ////////////////////////////////////////////////////////\n// NOTE:\n// Quasar validation for reference only\n// Remove this note once development is finished and make sure to\n// to convert all of them in veevalidate version\n// ////////////////////////////////////////////////////////\n\n// export const required = (val) => {\n//   return (val && val.length > 0) || '*Field is required'\n// }\n\n// export const required_obj = (obj) => {\n//   if (obj === null || obj === undefined) return '*Field is required'\n//   return (Object.entries(obj).length > 0 && obj.constructor === Object) || '*Field is required'\n// }\n\n// export const no_blank_spaces_arr = (arr) => {\n//   return arr.every(val => (val.trim() && val.trim().length > 0)) || 'Blank Spaces are not allowed'\n// }\n\n// export const url = val => {\n//   // If blank return\n//   if (val === undefined || val === null || val.length === 0) return true\n\n//   // Used\n//   // https://stackoverflow.com/questions/4314741/url-regex-validation\n\n//   // Other\n//   // https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\n//   // https://www.w3resource.com/javascript-exercises/javascript-regexp-exercise-9.php\n//   // https://www.geeksforgeeks.org/how-to-validate-url-using-regular-expression-in-javascript/\n\n//   /* eslint-disable no-useless-escape */\n//   const re = /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/\n//   /* eslint-enable no-useless-escape */\n//   return re.test(val) || 'URL is invalid'\n// }\n\n// export const date = val => {\n\n//   // If blank return\n//   if (val === undefined || val === null || val.length === 0) return true\n\n//   // https://github.com/quasarframework/quasar/blob/dev/ui/src/utils/patterns.js\n//   return /^-?[\\d]+\\/[0-1]\\d\\/[0-3]\\d$/.test(val) || 'Date is invalid'\n// }\n\n// export const max = (val, max) => {\n\n//   // If blank return\n//   if (val === undefined || val === null) return true\n\n//   return val.length <= max || `More than ${max} characters are not allowed`\n// }\n\n// export const max_arr = (val, max) => {\n//   return val.length <= max || `More than ${max} values are not allowed`\n// }\n\n// export const min = (val, min) => {\n\n//   // If blank return\n//   if (val === undefined || val === null || val.length === 0) return true\n\n//   return val.length >= min || `Minimum ${min} characters are required`\n// }\n\n// export const num_range = (val, min, max) => {\n\n//   // If blank return\n//   if (val === undefined || val === null || val.length === 0) return true\n\n//   const msg = 'Value is invalid'\n//   if (min === null) return val <= max || msg\n//   else if (max === null) return val >= min || msg\n//   else return (val >= min && val <= max) || msg\n// }\n"],"sourceRoot":""}